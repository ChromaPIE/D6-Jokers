[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

## Booster Pack API
# Card:open
[[patches]]
[patches.regex]
target = "card.lua"
pattern = '''G\.GAME\.pack_choices = self\.config\.center\.config\.choose or 1'''
position = "before"
payload = '''
booster_obj = self.config.center
sendInfoMessage("self.config.center: "..tostring(self.config.center))
if booster_obj and SMODS.Boosters[booster_obj.key] then
    G.STATE = G.STATES.SMODS_BOOSTER_OPENED
    SMODS.OPENED_BOOSTER = booster_obj.key
end'''

[[patches]]
[patches.regex]
target = "card.lua"
pattern = '''(?<indent>[\t ]*)elseif self\.ability\.name:find\('Spectral'\) then\n[\s\S]{24}card'''
position = "before"
payload = ''' 
elseif booster_obj.open and type(booster_obj.open) == "function" then 
    local _card_to_spawn = booster_obj:open(self)
    card = _card_to_spawn'''

# Game:set_globals
[[patches]]
[patches.regex]
target = "globals.lua"
pattern = '''(?<indent>[\t ]*)self\.STATES = \{'''
position = "after"
payload = '''SMODS_BOOSTER_OPENED = 999,'''

# Game:update
[[patches]]
[patches.regex]
target = "game.lua"
pattern = '''(?<indent>[\t ]*)if self\.STATE == self\.STATES\.TAROT_PACK then'''
position = "before"
payload = '''
if SMODS.Booster and G.STATE == G.STATES.SMODS_BOOSTER_OPENED then
    SMODS.Booster.handle_pack_uibox(dt)
end'''

# G.FUNC.can_skip_booster
[[patches]]
[patches.regex]
target = "functions/button_callbacks.lua"
pattern = '''(?<indent>[\t ]*)\(G\.STATE == G\.STATES\.PLANET_PACK or G\.STATE == G\.STATES\.STANDARD_PACK or G\.STATE == G.STATES\.BUFFOON_PACK or \(G\.hand and \(G\.hand\.cards\[1\] or \(G\.hand\.config\.card_limit <= 0\)\)\)\) then '''
position = "at"
payload = '''((SMODS.Booster and G.STATE == G.STATES.SMODS_BOOSTER_OPENED) or G.STATE == G.STATES.PLANET_PACK or G.STATE == G.STATES.STANDARD_PACK or G.STATE == G.STATES.BUFFOON_PACK or (G.hand and (G.hand.cards[1] or (G.hand.config.card_limit <= 0)))) then '''

[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "(self.config.type == 'deck' and self ~= G.deck) or"
position = "before"
payload = '''
(self.config.type == 'hand' and state == G.STATES.SMODS_BOOSTER_OPENED) or
'''
match_indent = false
overwrite = false

[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "prev_state == G.STATES.SPECTRAL_PACK or prev_state == G.STATES.STANDARD_PACK or"
position = "after"
payload = '''
prev_state == G.STATES.SMODS_BOOSTER_OPENED or
'''
match_indent = false
overwrite = false

## Obj_Pool API
# get_current_pool
